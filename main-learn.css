* {
  padding: 0;
  margin: 0;
}

body {
  color: #444;
  font-family: sans-serif;

  border-top: 10px solid #1098ad;
}
/* ? Types of Boxes CSS

*RECAP: most of the time we will actually leave the display setting alone and simply use the predefined box type because by default they do actually make a lot of sense
* However we can use display set to block in order to make a small inline element for example occupy an entire line which is something that we will need in certain situations in the real world
* Then some time we don't want a block-level element to push all the other elements into new line so basically we don't want them occupy all available blank space that there is to fill in that case we can set them to inline or inline-block element
*/
/** PAGE SECTION */
.container {
  width: 700px;
  margin: 0 auto;
}

.main-header {
  background-color: #f7f7f7;
  /* padding: 20px;
  padding-left: 40px;
  padding-right: 40px; */
  padding: 20px 40px;
  margin-bottom: 60px;
  /* height: 80px; */
}

.post-header {
  margin-bottom: 30px;
}

nav {
  font-size: 18px;
}

article {
  margin-bottom: 60px;
}

aside {
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  background-color: #f7f7f7;
  padding: 30px 0;
  /* * we can use width and height property to specify dismensions of element */
  width: 500px;
}

/* *SMALLER ELEMENT */
h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 30px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 20px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  /* ! we have problem here because the before element also have margin-bottom: 15px and now we use margin-top: 40px and it looks like 15+40= 55px 
  !but in fact it's not, space of two element is 40px not 55 px
  * and this phenomena is called collapsings(thu gon) margins so basically when we have two margin that occupied the same space only one of them is actually visible on the page and that is usually the larger of the two
  ? if the values in the same? so it just take random one of two like 40px + 40px = 80 px but in fact it's 40px for space of two elements
  * and so if you want the space is 55 px maybe we need specify space of one of two element is 55px*/
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

p {
  font-size: 21px;
  line-height: 1.5;
  margin-bottom: 15px;
}
li {
  /* * we can consvert the block-level element to inline element 
  * and so now they are side by side*/
  font-size: 20px;
  margin-bottom: 20px;
  display: inline;
}
li:last-child {
  margin-bottom: 0;
}

footer p {
  font-size: 16px;
}

article header p {
  font-style: italic;
}

/* * we need some space to display the numbers, and points on the list because we reseted margin and paddin in our page right */
ul,
ol {
  margin-left: 30px;
  margin-bottom: 20px;
}

li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
}

article p:first-child {
  color: red;
}

a:link {
  color: #1098ad;
  text-decoration: none;
}

a:visited {
  color: #1098ad;
}

a:hover {
  color: rgba(255, 0, 0, 0.39);
  font-weight: bold;
  text-decoration: underline solid olivedrab;
}

a:active {
  /* color: red; */
  background-color: black;
  font-style: italic;
}

a {
  color: red;
}

#copyright {
  color: red;
}

.copyright {
  color: #1098ad;
}

.text {
  color: #444;
}
footer p {
  color: #f7f7f7 !important;
}
.post-img {
  /* ! the image is inline element but infact it has behave like inline-block elements */
  width: 100%;
  height: auto;
  /* * and to demonstrate we can add some margin */
  /* margin: 100px; */
  /* * and if it's purely inline element so it's not work with margin top and bottom right */
}

nav a:link {
  /* background-color: #ffa500; */
  /* * this is an inline element so we can see the box model don't apply exactly 
   * only apply for left and right sides right, and dot't effect to vertical space top and bottom
  */
  /* margin: 20px; */
  /* *it's alos similar with padding */
  /* padding: 20px; */
  /* * so if we want it like block-level element have some space and elements one after another we can use display property to consvert to block-level element */
  /* display: block; */
  /* * now the anchor element here has all conditions to of being a block-level element
  * so now the box model applies to them normally, and they can occupy 100% width and all other of box model */
  /* 
! now we can use inline-block boxes for this 
*/
  display: inline-block;
  /* padding: 20px; 
  ! when we add some space for between elements we should use margin*/
  margin-right: 20px;
  margin-top: 20px;
}

/* * we can chain pseudo class 
* so many times that;s important to do to remove the space of last element not nessecary
*/
nav a:link:last-child {
  margin-right: 0;
}
