* {
  padding: 0;
  margin: 0;
}

body {
  color: #444;
  font-family: sans-serif;

  border-top: 10px solid #1098ad;
}
/* ? CENTERING OUR PAGE

* First: we need put all container element inside body to container box 
* Second: we need centering this container by use some margin left and right
*/

.container {
  /* * now all element in container can't have a width greater than 700px and if it greaters it'll auto set to 700px
  ! it's not inheritance because inheritance is related to text and width not property of text remember that
  * instead it is simply logic that child element can nerver wider than(rong hon) the parent element*/
  width: 700px;
  /* * now we will center this container by use margin left and right 
  * auto that means is that the margin on the left need to be the same then the margin on the right side and they should both caculated automatically by the browser
  * and so therefore this will mean that there will be a margin on the left and on the right which will be exactly the same size
  * therefore in the result the container will look centered inside of the body so basically inside of browser
  */
  /* margin-left: auto; */
  /* * auto: browser will automatically figure out the width
  * now when we resize or change size of webage on browser by pull tab so it's alway in center cuz browser auto figure out the width with margin right and left */
  /* margin-right: auto; */
  /* * when use many values we should use shorthand */
  margin: 0 auto;
}

.main-header {
  background-color: #f7f7f7;
  /* padding: 20px;
  padding-left: 40px;
  padding-right: 40px; */
  padding: 20px 40px;
  margin-bottom: 60px;
  height: 80px;
}

.post-header {
  margin-bottom: 30px;
}

nav {
  font-size: 18px;
}

article {
  margin-bottom: 60px;
}

aside {
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  background-color: #f7f7f7;
  padding: 30px 0;
  /* * we can use width and height property to specify dismensions of element */
  width: 500px;
}

h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 30px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 20px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  /* ! we have problem here because the before element also have margin-bottom: 15px and now we use margin-top: 40px and it looks like 15+40= 55px 
  !but in fact it's not, space of two element is 40px not 55 px
  * and this phenomena is called collapsings(thu gon) margins so basically when we have two margin that occupied the same space only one of them is actually visible on the page and that is usually the larger of the two
  ? if the values in the same? so it just take random one of two like 40px + 40px = 80 px but in fact it's 40px for space of two elements
  * and so if you want the space is 55 px maybe we need specify space of one of two element is 55px*/
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

p {
  font-size: 21px;
  line-height: 1.5;
  margin-bottom: 15px;
}
/* * we can specify margin to li element to have good space between of them */
li {
  /* ! notice that we don't want the last element have a space because we only want for each of them */
  font-size: 20px;
  margin-bottom: 20px;
}
/* * so can use trick with use pseudo last-child class */
li:last-child {
  /* margin-bottom: 0px; 
  ! notice that when use 0 we don't need specify unit like px, %,....
  */
  margin-bottom: 0;
  /* * this will overwrite margin-bottom befor of the last li element 
  * we will now keep adding more and more margins and padding to all of our elements
  */
}

footer p {
  font-size: 16px;
}

article header p {
  font-style: italic;
}

/* * we need some space to display the numbers, and points on the list because we reseted margin and paddin in our page right */
ul,
ol {
  margin-left: 30px;
  margin-bottom: 20px;
}

li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
}

article p:first-child {
  color: red;
}

a:link {
  color: #1098ad;
  text-decoration: none;
}

a:visited {
  color: #1098ad;
}

a:hover {
  color: rgba(255, 0, 0, 0.39);
  font-weight: bold;
  text-decoration: underline solid olivedrab;
}

a:active {
  /* color: red; */
  background-color: black;
  font-style: italic;
}

a {
  color: red;
}

#copyright {
  color: red;
}

.copyright {
  color: #1098ad;
}

.text {
  color: #444;
}
footer p {
  color: #f7f7f7 !important;
}
.post-img {
  /* * we don't specify the heigh and width in HTML, instead we should specify it in CSS 
  * when we specify the valude for height and width, then we can specify it's auto and auto value basically will automatically adapt in  order to account for the original aspect ratio of the image
  * it might good in case you don't now what's value for height or width to the image look better*/
  /* height: 300px;
  width: auto; */
  /* 
  * Now we can use other unit to change pixel and that's percentages(%)
  * and the percent usually the percentage of the width of parent container
  * when size of parent container change the size of image always adapt
  * and it's really important when we build responsive website so website that adapt to the screen width
  */
  width: 100%;
  height: auto;
}
